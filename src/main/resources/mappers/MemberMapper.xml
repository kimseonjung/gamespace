<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.semi.gamespace.member.model.dao.MemberMapper">
    <resultMap id="memberResultMap" type="com.semi.gamespace.member.model.dto.MemberDTO">
        <id property="memberCode" column="MEMBER_CODE"/>
        <result property="userId" column="MEMBER_ID"/>
        <result property="userPwd" column="MEMBER_PWD"/>
        <result property="userNickname" column="MEMBER_NICKNAME"/>
        <result property="userName" column="MEMBER_NAME"/>
        <result property="userPhone" column="MEMBER_PHONE"/>
        <result property="userEmail" column="MEMBER_EMAIL"/>
        <result property="userBirthday" column="MEMBER_BIRTH"/>
        <result property="userGender" column="MEMBER_GENDER"/>
        <result property="userAddress" column="ADDRESS"/>
        <result property="userIntroduce" column="INTRODUCE"/>
        <result property="userSiteLink1" column="SITE_LINK_1"/>
        <result property="userSiteLink2" column="SITE_LINK_2"/>
        <result property="userSiteLink3" column="SITE_LINK_3"/>
        <result property="userSiteLink4" column="SITE_LINK_4"/>
        <result property="userSiteLink5" column="SITE_LINK_5"/>
        <result property="userSiteLink6" column="SITE_LINK_6"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="memberStatus" column="MEMBER_STATUS"/>
        <result property="banDate" column="BAN_DATE"/>
        <result property="isAdmin" column="ADMIN_YN"/>
    </resultMap>
    <resultMap id="simpleMemberMap" type="com.semi.gamespace.admin.model.dto.SimpleMemberDTO">
        <id property="memberCode" column="MEMBER_CODE"/>
        <result property="userNickname" column="MEMBER_NICKNAME"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="memberStatus" column="MEMBER_STATUS"/>
        <result property="banDate" column="BAN_DATE"/>
    </resultMap>

    <select id="findMemberById" resultMap="memberResultMap" parameterType="string">
        SELECT M.MEMBER_CODE,
               M.MEMBER_ID,
               M.MEMBER_PWD,
               M.MEMBER_NICKNAME,
               M.MEMBER_NAME,
               M.MEMBER_PHONE,
               M.MEMBER_EMAIL,
               TO_CHAR(TO_DATE(M.MEMBER_BIRTH, 'RR/MM/DD'),'YYYY-MM-DD') AS MEMBER_BIRTH,
               M.MEMBER_GENDER,
               M.ADDRESS,
               M.INTRODUCE,
               M.SITE_LINK_1,
               M.SITE_LINK_2,
               M.SITE_LINK_3,
               M.SITE_LINK_4,
               M.SITE_LINK_5,
               M.SITE_LINK_6,
               TO_CHAR(TO_DATE(M.ENROLL_DATE, 'YY/MM/DD'),'YYYY-MM-DD') AS ENROLL_DATE,
               M.MEMBER_STATUS,
               TO_CHAR(TO_DATE(M.BAN_DATE, 'YY/MM/DD'),'YYYY-MM-DD') AS BAN_DATE,
               M.ADMIN_YN
          FROM MEMBER M
         WHERE M.MEMBER_ID = #{ userId }
--            AND M.MEMBER_STATUS = 'Y'
    </select>

    <select id="findMemberByEmailForSocialLogin" resultMap="memberResultMap" parameterType="string">
        SELECT M.MEMBER_CODE,
               M.MEMBER_ID,
               M.MEMBER_PWD,
               M.MEMBER_NICKNAME,
               M.MEMBER_NAME,
               M.MEMBER_PHONE,
               M.MEMBER_EMAIL,
               TO_CHAR(TO_DATE(M.MEMBER_BIRTH, 'RR/MM/DD'),'YYYY-MM-DD') AS MEMBER_BIRTH,
               M.MEMBER_GENDER,
               M.ADDRESS,
               M.INTRODUCE,
               M.SITE_LINK_1,
               M.SITE_LINK_2,
               M.SITE_LINK_3,
               M.SITE_LINK_4,
               M.SITE_LINK_5,
               M.SITE_LINK_6,
               TO_CHAR(TO_DATE(M.ENROLL_DATE, 'YY/MM/DD'),'YYYY-MM-DD') AS ENROLL_DATE,
               M.MEMBER_STATUS,
               TO_CHAR(TO_DATE(M.BAN_DATE, 'YY/MM/DD'),'YYYY-MM-DD') AS BAN_DATE,
               M.ADMIN_YN
        FROM MEMBER M
        WHERE M.MEMBER_EMAIL = #{ userEmail }
--           AND M.MEMBER_STATUS = 'Y'
    </select>

    <select id="selectAllMember" resultMap="memberResultMap">
        SELECT M.MEMBER_CODE,
               M.MEMBER_ID,
               M.MEMBER_PWD,
               M.MEMBER_NICKNAME,
               M.MEMBER_NAME,
               M.MEMBER_PHONE,
               M.MEMBER_EMAIL,
               TO_CHAR(TO_DATE(M.MEMBER_BIRTH, 'RR/MM/DD'),'YYYY-MM-DD') AS MEMBER_BIRTH,
               M.MEMBER_GENDER,
               M.ADDRESS,
               M.INTRODUCE,
               M.SITE_LINK_1,
               M.SITE_LINK_2,
               M.SITE_LINK_3,
               M.SITE_LINK_4,
               M.SITE_LINK_5,
               M.SITE_LINK_6,
               TO_CHAR(TO_DATE(M.ENROLL_DATE, 'YY/MM/DD'),'YYYY-MM-DD') AS ENROLL_DATE,
               M.MEMBER_STATUS,
               TO_CHAR(TO_DATE(M.BAN_DATE, 'YY/MM/DD'),'YYYY-MM-DD') AS BAN_DATE,
               M.ADMIN_YN
          FROM MEMBER M
--          WHERE M.MEMBER_STATUS = 'Y'
         ORDER BY M.MEMBER_CODE
    </select>

    <select id="findMemberUsingIndex" resultMap="simpleMemberMap" parameterType="java.util.HashMap">
        SELECT R.MEMBER_CODE,
               R.MEMBER_NICKNAME,
               TO_CHAR(TO_DATE(R.ENROLL_DATE, 'RR/MM/DD'), 'YYYY-MM-DD') AS ENROLL_DATE,
               R.MEMBER_STATUS,
               TO_CHAR(TO_DATE(R.BAN_DATE, 'RR/MM/DD'), 'YYYY-MM-DD')    AS BAN_DATE
        FROM (SELECT ROWNUM RNUM,
                     A.MEMBER_CODE,
                     A.MEMBER_NICKNAME,
                     A.ENROLL_DATE,
                     A.BAN_DATE,
                     A.MEMBER_STATUS
              FROM MEMBER A
              WHERE 1=1
            <if test="search != ''">
                AND A.MEMBER_NICKNAME LIKE '%'||#{ search }||'%'
            </if>
              ORDER BY A.MEMBER_NICKNAME) R
        WHERE R.MEMBER_STATUS = #{ isBlack }
          AND R.RNUM BETWEEN #{ idxFirst } AND #{ idxLast }
    </select>

    <select id="findMemberId" resultType="String" parameterType="java.util.HashMap">
        SELECT M.MEMBER_ID
          FROM MEMBER M
         WHERE M.MEMBER_NAME = #{ memberName }
           AND M.MEMBER_EMAIL = #{ memberEmail }
           AND M.MEMBER_STATUS = 'Y'
    </select>

    <select id="findMemberForEmailSend" resultType="String" parameterType="java.util.HashMap">
        SELECT M.MEMBER_EMAIL
        FROM MEMBER M
        WHERE M.MEMBER_ID = #{ userId }
          AND M.MEMBER_EMAIL = #{ userEmail }
          AND M.MEMBER_STATUS = 'Y'
    </select>

    <select id="countFollowFromByCode" resultType="_int" parameterType="string">
        SELECT COUNT(*)
        FROM FOLLOW F
        WHERE F.FOLLOW_TAR_CODE = #{ code }
    </select>

    <select id="registIdCheck" resultType="_int" parameterType="string">
        SELECT COUNT(*)
          FROM MEMBER M
         WHERE M.MEMBER_ID = #{ input }
    </select>

    <select id="registNicknameCheck" resultType="_int" parameterType="string">
        SELECT COUNT(*)
        FROM MEMBER M
        WHERE M.MEMBER_NICKNAME = #{ input }
    </select>

    <select id="registEmailCheck" resultType="_int" parameterType="string">
        SELECT COUNT(*)
        FROM MEMBER M
        WHERE M.MEMBER_EMAIL = #{ input }
    </select>

    <select id="countFollowToByCode" resultType="_int" parameterType="string">
        SELECT COUNT(*)
          FROM FOLLOW F
         WHERE F.FOLLOW_REQ_CODE = #{ code }
    </select>

    <select id="countHistoryOfBoard" resultType="_int" parameterType="string">
        SELECT
            (SELECT COUNT(*) FROM FREE_GAL WHERE MEMBER_CODE = #{ code }),
            (SELECT COUNT(*) FROM GAME_GAL WHERE MEMBER_CODE = #{ code })
        FROM DUAL
    </select>

    <select id="countHistoryOfComment" resultType="_int" parameterType="string">
        SELECT
                (SELECT COUNT(*) FROM FREE_GAL_COM WHERE MEMBER_CODE = #{ code }),
                (SELECT COUNT(*) FROM GAME_GAL_COM WHERE MEMBER_CODE = #{ code })
        FROM DUAL
    </select>

    <select id="SocialMemberEmailCheck" resultType="_int" parameterType="string">
        SELECT COUNT(*)
        FROM MEMBER M
        WHERE M.MEMBER_EMAIL = #{ userEmail }
    </select>

    <select id="checkFollowState" resultType="_int" parameterType="java.util.HashMap">
        SELECT COUNT(*)
        FROM FOLLOW F
        WHERE F.FOLLOW_REQ_CODE = #{ current }
          AND F.FOLLOW_TAR_CODE = #{ target }
    </select>

    <select id="countAllSearchedUser" resultType="_int" parameterType="java.util.HashMap">
        SELECT COUNT(*)
        FROM MEMBER M
        WHERE M.MEMBER_STATUS = #{ status }
        <if test="search != ''">
            AND M.MEMBER_NICKNAME LIKE '%'||#{ search }||'%'
        </if>
    </select>

    <insert id="registMember" parameterType="com.semi.gamespace.member.model.dto.MemberDTO">
        INSERT
        INTO MEMBER M (
               M.MEMBER_CODE,
               M.MEMBER_ID,
               M.MEMBER_PWD,
               M.MEMBER_NICKNAME,
               M.MEMBER_NAME,
               M.MEMBER_PHONE,
               M.MEMBER_EMAIL,
               M.MEMBER_BIRTH,
               M.MEMBER_GENDER,
               M.ADDRESS,
               M.INTRODUCE,
               M.SITE_LINK_1,
               M.SITE_LINK_2,
               M.SITE_LINK_3,
               M.SITE_LINK_4,
               M.SITE_LINK_5,
               M.SITE_LINK_6,
               M.ENROLL_DATE,
               M.MEMBER_STATUS,
               M.BAN_DATE,
               M.ADMIN_YN
        )
        VALUES (
            'MEM_'||MEMBER_CODE_SEQ.NEXTVAL,
            #{ userId },
            #{ userPwd },
            #{ userNickname },
            #{ userName },
            #{ userPhone },
            #{ userEmail },
            TO_DATE(#{ userBirthday }, 'YYYY-MM-DD'),
            #{ userGender },
            #{ userAddress },
            #{ userIntroduce },
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            TO_DATE(SYSDATE, 'YYYY-MM-DD'),
            'Y',
            NULL,
            'N'
        )
    </insert>

    <insert id="insertFollowConnect" parameterType="java.util.HashMap">
        INSERT
        INTO FOLLOW F (
            F.FOLLOW_CODE,
            F.FOLLOW_REQ_CODE,
            F.FOLLOW_TAR_CODE,
            F.FOLLOW_DATE
        )
        VALUES (
            'FOL_'||FOLLOW_CODE_SEQ.NEXTVAL,
            #{ requestCode },
            #{ targetCode },
            TO_DATE(SYSDATE, 'YYYY-MM-DD')
        )
    </insert>

    <update id="updateMember" parameterType="com.semi.gamespace.member.model.dto.MemberDTO">
        UPDATE MEMBER M
           SET (
               M.MEMBER_NICKNAME,
               M.MEMBER_NAME,
               M.MEMBER_PHONE,
               M.MEMBER_EMAIL,
               M.MEMBER_BIRTH,
               M.MEMBER_GENDER,
               M.ADDRESS,
               M.INTRODUCE
            ) = ( SELECT #{ userNickname },
                         #{ userName },
                         #{ userPhone },
                         #{ userEmail },
                         TO_DATE(#{ userBirthday }, 'YYYY-MM-DD'),
                         #{ userGender },
                         #{ userAddress },
                         #{ userIntroduce }
                    FROM DUAL
            )
         WHERE M.MEMBER_ID = #{ userId }
    </update>

    <update id="leaveMemberByCode" parameterType="String">
        UPDATE MEMBER M
           SET M.MEMBER_STATUS = 'N'
         WHERE M.MEMBER_CODE = #{ input }
    </update>

    <update id="updateMemberSiteLink" parameterType="java.util.HashMap">
        UPDATE MEMBER M
        <set>
        <choose>
            <when test="linkCode == 1">M.SITE_LINK_1 = #{ modifyLink }</when>
            <when test="linkCode == 2">M.SITE_LINK_2 = #{ modifyLink }</when>
            <when test="linkCode == 3">M.SITE_LINK_3 = #{ modifyLink }</when>
            <when test="linkCode == 4">M.SITE_LINK_4 = #{ modifyLink }</when>
            <when test="linkCode == 5">M.SITE_LINK_5 = #{ modifyLink }</when>
            <when test="linkCode == 6">M.SITE_LINK_6 = #{ modifyLink }</when>
        </choose>
        </set>
        WHERE M.MEMBER_CODE = #{ memberCode }
    </update>

    <update id="updateMemberPassword" parameterType="java.util.HashMap">
        UPDATE MEMBER M
           SET M.MEMBER_PWD = #{ userData }
         WHERE M.MEMBER_CODE = #{ userCode }
    </update>

    <delete id="deleteFollowConnect" parameterType="java.util.HashMap">
        DELETE
          FROM FOLLOW F
         WHERE F.FOLLOW_REQ_CODE = #{ requestCode }
           AND F.FOLLOW_TAR_CODE = #{ targetCode }
    </delete>

    <delete id="deleteFollowAll" parameterType="string">
        DELETE
          FROM FOLLOW F
         WHERE F.FOLLOW_REQ_CODE = #{ input }
            OR F.FOLLOW_TAR_CODE = #{ input }
    </delete>




    <update id="memberBanByCode" parameterType="java.util.HashMap">
        UPDATE MEMBER M
        SET (
                M.MEMBER_STATUS,
                M.BAN_DATE
                ) = (
                    SELECT 'N',
                           #{ banDate }
                      FROM DUAL
                )
        WHERE M.MEMBER_CODE = #{ targetCode }
    </update>
    <update id="memberUnbanByCode" parameterType="string">
        UPDATE MEMBER M
        SET (
                M.MEMBER_STATUS,
                M.BAN_DATE
                ) = (
                SELECT 'Y',
                       NULL
                  FROM DUAL
            )
        WHERE M.MEMBER_CODE = #{ memberCode }
    </update>
</mapper>