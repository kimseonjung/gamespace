<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semi.gamespace.news.model.dao.NewsInfoMapper"> <!-- 메퍼위치하고  동일하게 네임스페이스 작성-->

    <resultMap id="newsInfoResultMap" type="com.semi.gamespace.news.model.dto.NewsDTO">
        <id property="newsCode" column="NEWS_CODE"/>
        <result property="newsTitle" column="NEWS_TITLE"/>
        <result property="newsView" column="NEWS_VIEW"/>
        <result property="newsDate" column="NEWS_DATE"/>
        <result property="newsContent" column="NEWS_CONTENT"/>
        <result property="gameName" column="GAME_NAME"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="isAdmin" column="ADMIN_YN"/>
    </resultMap>

    <resultMap id="newsInfoResultMap2" type="com.semi.gamespace.news.model.dto.NewsDTO">
        <id property="newsCode" column="NEWS_CODE"/>
        <result property="newsTitle" column="NEWS_TITLE"/>
        <result property="newsView" column="NEWS_VIEW"/>
        <result property="newsDate" column="NEWS_DATE"/>
        <result property="newsContent" column="NEWS_CONTENT"/>
        <result property="gameName" column="GAME_CODE"/>
        <result property="memberName" column="MEMBER_CODE"/>
    </resultMap>

    <resultMap id="newsComResultMap" type="com.semi.gamespace.news.model.dto.NewsComDTO">
        <id property="newsComCode" column="NEWS_COM_CODE"/>
        <result property="newsCode" column="NEWS_CODE"/>
        <result property="newsCom" column="NEWS_COM_TITLE"/>
        <result property="memberCode" column="MEMBER_CODE"/>
        <result property="regDate" column="REGDATE"/>
    </resultMap>
    
    <select id="selectAllNewsList" resultMap="newsInfoResultMap">
        SELECT
            A.NEWS_CODE,
            A.NEWS_TITLE,
            A.NEWS_VIEW,
            TO_CHAR(TO_DATE(A.NEWS_DATE,'YY-MM-DD'),'RRRR-MM-DD') AS NEWS_DATE,
            A.NEWS_CONTENT,
            B.GAME_NAME,
            C.MEMBER_NAME
        FROM NEWS A
                 JOIN GAME_INFO B ON (A.GAME_CODE = B.GAME_CODE)
                 JOIN MEMBER C ON (A.MEMBER_CODE = C.MEMBER_CODE)
    </select>

    <select id="newsDetail" parameterType="String" resultMap="newsInfoResultMap">
        SELECT
            A.NEWS_CODE,
            A.NEWS_TITLE,
            A.NEWS_VIEW,
            TO_CHAR(TO_DATE(A.NEWS_DATE,'YY-MM-DD'),'RRRR-MM-DD') AS NEWS_DATE,
            A.NEWS_CONTENT,
            B.GAME_NAME,
            C.MEMBER_NAME,
            C.ADMIN_YN
        FROM NEWS A
                 JOIN GAME_INFO B ON (A.GAME_CODE = B.GAME_CODE)
                 JOIN MEMBER C ON (A.MEMBER_CODE = C.MEMBER_CODE)
        WHERE NEWS_CODE = #{news_code}
    </select>

    <insert id="registNewsInfo" >
        INSERT
        INTO NEWS A
        (
            A.NEWS_CODE,
            A.NEWS_TITLE,
            A.NEWS_VIEW,
            A.NEWS_DATE,
            A.NEWS_CONTENT,
            A.GAME_CODE,
            A.MEMBER_CODE
        )
        VALUES
            (
            'NEW_'||NEWS_CODE_SEQ.NEXTVAL,
            #{newsTitle},
            '0',
            TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:mi:SS'),
            #{newsContent},
            #{gameName},
            #{memberName}
            )
    </insert>

    <select id="getNewsCode" parameterType="String" resultMap="newsInfoResultMap">
        SELECT
            *
        FROM
            NEWS
        WHERE
            NEWS_CODE = #{news_code}
    </select>

    <select id="selectAllGameCodeNews" parameterType="String" resultMap="newsInfoResultMap2">
        SELECT
            *
        FROM NEWS A
                 JOIN GAME_INFO B ON (A.GAME_CODE = B.GAME_CODE)
        WHERE A.GAME_CODE = 'GAM_1'
    </select>


    <update id="updateNewsInfo" parameterType="com.semi.gamespace.news.model.dto.NewsDTO">
        UPDATE NEWS
        SET
            NEWS_TITLE=#{newsTitle},
            NEWS_CONTENT=#{newsContent}
            WHERE NEWS_CODE=#{newsCode}
    </update>

    <delete id="deleteNewsInfo" parameterType="String">
        DELETE
        FROM NEWS
        WHERE NEWS_CODE=#{newsCode}
    </delete>


    <!-- 댓글 ************************************************************************************************* -->

    <!-- 댓글 조회 -->
    <select id="getNewsCom" parameterType="String" resultMap="newsComResultMap">
        SELECT
            A.NEWS_COM_CODE,
            A.NEWS_CODE,
            A.NEWS_COM_TITLE,
            A.MEMBER_CODE,
            A.REGDATE
        FROM NEWS_COM A
        WHERE NEWS_CODE = #{newsCode}
    </select>

    <!-- 댓글 boardId 넘기기 -->
    <select id="getNewsComCode" parameterType="String" resultType="String">
        SELECT
            NEWS_COM_CODE
        FROM NEWS_COM
        WHERE NEWS_COM_CODE = #{NewsComCode}
    </select>

    <!-- 댓글 작성 -->
    <insert id="uploadNewsCom" parameterType="com.semi.gamespace.news.model.dto.NewsComDTO">
        INSERT INTO
            NEWS_COM(
                NEWS_COM_CODE,
                    NEWS_CODE,
                    NEWS_COM_TITLE,
                    MEMBER_CODE
                     )
        VALUES(
            'NEWC_' ||NEWS_COM_CODE_SEQ.nextval,
               #{newsCode},
               #{newsCom},
               'MEM_1'
               )
    </insert>

    <!-- 댓글 수정 -->
    <update id="updateNewsCom" parameterType="java.util.HashMap">
        UPDATE NEWS_COM
        SET
            MEMBER_CODE='MEM_1', NEWS_COM_TITLE=#{newsCom}
        WHERE NEWS_COM_CODE=#{newsComCode} AND NEWS_CODE=#{newsCode}
    </update>

    <!-- 댓글 삭제 -->
    <delete id="deleteNewsCom" parameterType="String">
        DELETE FROM NEWS_COM
        WHERE NEWS_COM_CODE=#{newsComCode}
    </delete>

    <select id="gameCodeNewsList" parameterType="java.util.HashMap" resultMap="newsInfoResultMap">
        SELECT
        A.NEWS_CODE,
        A.NEWS_TITLE,
        A.NEWS_VIEW,
        TO_CHAR(TO_DATE(A.NEWS_DATE,'YY-MM-DD'),'RRRR-MM-DD') AS NEWS_DATE,
        A.NEWS_CONTENT,
        B.GAME_NAME,
        C.MEMBER_NAME
        FROM NEWS A
            JOIN GAME_INFO B ON (A.GAME_CODE = B.GAME_CODE)
            JOIN MEMBER C ON (A.MEMBER_CODE = C.MEMBER_CODE)
        WHERE 1=1
        <if test="gameCode != null">
            AND A.GAME_CODE IN
            <foreach item="item" index="index" collection="gameCode" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>


</mapper>